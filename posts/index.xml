<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Anushan Lingam</title>
    <link>https://blog.anushanlingam.com/posts/</link>
    <description>Recent content in Posts on Anushan Lingam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 03 Jun 2023 09:10:30 +0100</lastBuildDate><atom:link href="https://blog.anushanlingam.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analysing a NetSupport RAT Sample</title>
      <link>https://blog.anushanlingam.com/posts/20230603_netsupport_rat/</link>
      <pubDate>Sat, 03 Jun 2023 09:10:30 +0100</pubDate>
      
      <guid>https://blog.anushanlingam.com/posts/20230603_netsupport_rat/</guid>
      <description>Introduction While exploring Malware Bazar and Any.Run public submissions in search of intriguing samples, I stumbled upon a script that caught my attention. This was a JScript file that was intended to be executed by the Windows Scripting engine and exhibited the usual assortment of peculiarly named functions and confusing variable names.
After subjecting the script to VirusTotal analysis, I discovered that no vendors had flagged it (as of May 31, 2023), indicating it was a new sample.</description>
    </item>
    
    <item>
      <title>Ingesting Pi-Hole DNS Logs into Falcon LogScale</title>
      <link>https://blog.anushanlingam.com/posts/20230210-piholelogscale/</link>
      <pubDate>Fri, 10 Feb 2023 15:15:34 +0100</pubDate>
      
      <guid>https://blog.anushanlingam.com/posts/20230210-piholelogscale/</guid>
      <description>A Python based CLI Tool and accompanying Logscale parsers to extract DNS query logs from the long-term query database of a Pihole instance and ingest them into the Falcon Logscale (Humio) platform.
View the GitHub Repository
Usage This will retrieve the last x amount of messages depending on the options you configure (e.g. last 5 minutes) and send them to your logscale instance via the ingest api. Set this script to run as a scheduled task or cron job to retrieve your DNS queries at regular intervals.</description>
    </item>
    
  </channel>
</rss>
